# -*- coding: utf-8 -*-
"""EdgeDetection-A2Q1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gky9DWEuP3v_-CfcfV2xafp2LFOLCTeN
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt


img = cv2.imread('einstein.jpg',1)
#  to make the image black and white for blurring
imggray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
cv2.imshow(img)
cv2.imwrite('einstein.jpg',img)

# blurred using 5 x 5 kernel
blurred1 = cv2.GaussianBlur(imggray, (5, 5), 0)
# blurred using 9 x 9 kernel
blurred2 = cv2.GaussianBlur(imggray, (9, 9), 0)

edge1 = blurred1 - blurred2
edge2 = blurred2 - blurred1

plt.figure(),plt.imshow(blurred1,cmap='gray'),plt.axis('off'),plt.title('Blurred 1')
plt.figure(),plt.imshow(blurred2,cmap='gray'),plt.axis('off'),plt.title('Blurred 2')
plt.figure(),plt.imshow(edge1,cmap='gray'),plt.axis('off'),plt.title('Edge Detection 1')
plt.figure(),plt.imshow(edge2,cmap='gray'),plt.axis('off'),plt.title('Edge Detection 2')
plt.show()