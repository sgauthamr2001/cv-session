# -*- coding: utf-8 -*-
"""Q2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jmLHgQGIt1zSx-AI1KBR6wv7Nry7Wqk0
"""

import numpy as np
import cv2
from google.colab.patches import cv2_imshow

img=cv2.imread('brl.png')
cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
his=cv2.calcHist([img],[0], None, [256], [0,256])
cv2.normalize(his, his, 0, 255, cv2.NORM_MINMAX)
check=True
capture=cv2.VideoCapture('vid.mp4')
while check:
    valid, frame = capture.read()
    hsv_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
    back_proj = cv2.calcBackProject([hsv_frame], [0, 1], his, [0, 20, 0, 256], 1)
    back_proj = cv2.calcBackProject([hsv_frame], [0, 1], his, [0, 20, 0, 256], 1) 
    convol = cv2.getStructuringElement(cv2.MORPH_ELLIPSE,(5, 5))
    cv2.filter2D(back_proj, -1, convol, back_proj)
    _1, thresh = cv2.threshold(back_proj, 70, 150, cv2.THRESH_BINARY) 
    merged = cv2.merge((thresh, thresh, thresh))
    final = cv2.bitwise_and(frame, merged) 
    final = cv2.cvtColor(final, cv2.COLOR_BGR2GRAY)
    cv2_imshow( frame) # display the frame

    if cv2.waitKey(30) == 27: # wait till the user presses ESC
      break # break if ESC is pressed